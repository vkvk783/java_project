# Maven package Java project Web App to Linux on Azure
# Build your Java project and deploy it to Azure as a Linux web app
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: '94f5cfc1-06a4-4858-93fa-54b1083eab1c'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: MavenPackageAndPublishArtifacts
    displayName: Maven Package and Publish Artifacts
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        codeCoverageToolOption: 'JaCoCo'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
        
    - task: PublishCodeCoverageResults@2
      inputs:
        summaryFileLocation: '**/target/site/jacoco/jacoco.xml'
        failIfCoverageEmpty: true
        
    # Step 4: SonarCloud Analysis Preparation
    - task: SonarCloudPrepare@3
      inputs:
        SonarCloud: 'SonarQube Cloud'
        organization: 'vkdevops'
        scannerMode: 'other'
        configMode: 'manual'
        cliProjectKey: 'vkdevops_java-app'
        cliProjectName: 'java-app'
        cliSources: 'java_project/server/src/main/java/com/example'
        extraProperties: |
          sonar.junit.reportPaths=target/surefire-reports
          sonar.jacoco.reportPaths=target/site/jacoco/jacoco.xml
    # Step 5: Run SonarCloud Analysis
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'sonar:sonar'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.7'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false

    # Step 6: Publish SonarCloud Quality Gate Result
    - task: SonarCloudPublish@2
      inputs:
        pollingTimeoutSec: '300'

    - task: CopyFiles@2
      displayName: 'Copy Files to artifact staging directory'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: '**/target/*.?(war|jar)'
        TargetFolder: $(Build.ArtifactStagingDirectory)

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Build Artifacts'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
