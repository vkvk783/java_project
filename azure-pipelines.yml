# Maven package Java project Web App to Linux on Azure
# Build your Java project and deploy it to Azure as a Linux web app
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: '94f5cfc1-06a4-4858-93fa-54b1083eab1c'

  # Agent VM image name
pool:
 vmImage: ubuntu-latest

     # Maven Build and Test
steps:
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml'
        codeCoverageToolOption: 'JaCoCo'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
    
    # Publish JUnit Test Results
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        mergeTestResults: true
        testRunTitle: 'Junit Test Results'

        
    - task: PublishCodeCoverageResults@2
      inputs:
        summaryFileLocation: '**/target/site/jacoco/jacoco.xml'
        failIfCoverageEmpty: true
    
    # Step 4: SonarCloud Analysis Preparation
    - task: SonarCloudPrepare@3
      inputs:
        SonarQube: 'SonarQube Cloud'
        organization: 'vkvk783'
        scannerMode: 'cli'
        configMode: 'manual'      
        cliProjectKey: 'vkvk783_java_project'
        cliProjectName: 'java_project'
        cliSources: 'webapp/src/main/webapp/'
        extraProperties: |
          sonar.junit.reportPaths=target/surefire-reports
          sonar.jacoco.reportPaths=target/site/jacoco/jacoco.xml

    - task: SonarCloudPublish@3
      inputs:
        pollingTimeoutSec: '300'

    - task: SonarCloudAnalyze@3
      inputs:
        jdkversion: 'JAVA_HOME_17_X64'

    - task: CopyFiles@2
      displayName: 'Copy Files to artifact staging directory'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: '**/target/*.?(war|jar)'
        TargetFolder: $(Build.ArtifactStagingDirectory)

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Build Artifacts'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'